SSS
### **Step-by-Step Guide to Creating a Virtual Machine in Azure**

Here is a clear and detailed explanation of how to create a Virtual Machine (VM) in Azure with examples.

---

### **Step 1: Log in to Azure Portal**
1. Go to the Azure portal by visiting [https://portal.azure.com](https://portal.azure.com).  
2. Sign in using your Azure account credentials (email and password).

---

### **Step 2: Open the Virtual Machines Service**
1. In the Azure portal, locate the **search bar** at the top of the page.  
2. Type "Virtual Machines" and select it from the list that appears.  
3. Click on the **Create** button to start a new virtual machine creation process.

---

### **Step 3: Configure Basic Settings**
You will see the "Create a virtual machine" page. Here, you will enter basic details.

1. **Subscription**:  
   Select the Azure subscription under which the VM will be created.  
   Example: If you have multiple subscriptions, choose one like **"Pay-As-You-Go"**.

2. **Resource Group**:  
   - Select an existing resource group or create a new one.  
   - Example: Click **Create new** and name it "myResourceGroup".

3. **Instance Details**:  
   - **Virtual Machine Name**: Enter a name for your VM. Example: "MyTestVM".  
   - **Region**: Select a region close to you for low latency. Example: "East US".  
   - **Availability Options**: Choose options like "No infrastructure redundancy" or "Availability zone" for high availability.  

4. **Image**:  
   Select the operating system you want to install on the VM.  
   Example: Choose "Ubuntu Server 20.04 LTS" for Linux or "Windows Server 2019" for Windows.

5. **VM Size**:  
   Select the size of the virtual machine. This includes the number of CPUs and memory.  
   Example: Click "See all sizes" and select "Standard_B2s" (2 vCPUs, 4 GB RAM).

6. **Administrator Account**:  
   - If you choose **Windows**, provide a username and password.  
     Example: Username: `adminuser`, Password: `MySecurePass123`.  
   - If you choose **Linux**, use either:  
     - **Password**: Set a username and password.  
     - **SSH Public Key**: Provide a public key for secure login.  

7. **Inbound Port Rules**:  
   - Select **Allow selected ports** to allow access to the VM.  
   - For Linux, open **SSH (22)**.  
   - For Windows, open **RDP (3389)**.

Click **Next: Disks**.

---

### **Step 4: Configure Disks**
1. **OS Disk Type**:  
   Choose the type of disk for the operating system:  
   - **Standard HDD** (cheaper, slower)  
   - **Standard SSD** (better performance)  
   - **Premium SSD** (best performance, but costlier).  

   Example: Choose "Standard SSD" for general use.

2. **Data Disks**:  
   If you need additional storage, attach extra data disks here. This step is optional.

Click **Next: Networking**.

---

### **Step 5: Configure Networking**
1. **Virtual Network (VNet)**:  
   Choose an existing virtual network or create a new one.  
   Example: Create a new VNet named `myVNet`.

2. **Subnet**:  
   Select a subnet within your virtual network.  
   Example: Subnet name: `default`.

3. **Public IP**:  
   Choose **Create new** to generate a public IP address for the VM. This allows you to connect to the VM from the internet.

4. **NIC Network Security Group**:  
   Select **Basic** and configure inbound rules to allow ports.  
   - Example: If you need SSH access for Linux, ensure **SSH (22)** is allowed.  
   - For Windows, ensure **RDP (3389)** is allowed.

Click **Next: Management**.

---

### **Step 6: Configure Management**
1. **Monitoring**:  
   - Enable or disable features like Boot diagnostics and guest-level monitoring.  
   - Example: Enable **Boot diagnostics** to troubleshoot startup issues.  

2. **Identity**:  
   - Configure **System-assigned managed identity** if you want the VM to interact with Azure services securely without using credentials.  

3. **Auto-shutdown**:  
   Optionally enable auto-shutdown to save costs.  
   Example: Set shutdown time to **7 PM**.

Click **Next: Advanced**.

---

### **Step 7: Configure Advanced Options (Optional)**
1. **Extensions**:  
   Add VM extensions like custom scripts or tools if needed.  

2. **Custom Data**:  
   If you have a script to configure the VM automatically, you can upload it here.  
   Example: Use a shell script to install software on Linux VMs.

Click **Next: Tags**.

---

### **Step 8: Add Tags**
Tags help you manage resources in Azure.  
Example:  
- Name: `Environment`, Value: `Production`.  
- Name: `Owner`, Value: `Lakshmi`.

Click **Next: Review + Create**.

---

### **Step 9: Review and Create the VM**
1. Review all the settings you have configured. Ensure everything is correct.  
2. Click the **Create** button to deploy the virtual machine.  
3. Azure will take a few minutes to create the VM.

---

### **Step 10: Access the Virtual Machine**
Once the VM is deployed, follow these steps to connect:

#### For Linux VMs:
1. Locate the **Public IP Address** of the VM.  
2. Use an SSH client like **PuTTY** (Windows) or a terminal (Linux/macOS):  
   ```bash
   ssh username@<Public-IP>
   ```
   Example:  
   ```bash
   ssh adminuser@52.168.1.1
   ```

#### For Windows VMs:
1. Download the RDP file from the Azure portal:  
   - Go to the VM overview page and click **Connect > RDP**.  
2. Open the downloaded RDP file and log in using the username and password you set earlier.

---

### **Step 11: Monitor and Manage the VM**
1. In the Azure portal, go to the VM's page.  
2. Use options like **Metrics** and **Azure Monitor** to track performance.  
3. Configure scaling, backups, and alerts if needed.

---

### **Example Summary**
Hereâ€™s an example setup:  
- VM Name: `MyTestVM`  
- OS: Ubuntu Server 20.04 LTS  
- Size: Standard_B2s (2 vCPUs, 4 GB RAM)  
- Region: East US  
- Ports: SSH (22) for Linux  

By following these steps, you can successfully create and manage a virtual machine in Azure. Let me know if you need help with specific configurations!
